

services:
  # Servicio de mySQL
  db:
    image: mysql:8.0
    container_name: mysql_db
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: authentication_db
      MYSQL_USER: auth_user
      MYSQL_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - microservices-network

  # Servicio de la API REST
  auth-app:
    image: api_rest
    container_name: auth-app
    build:
      context: ./retos2-mejorado
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/authentication_db
      SPRING_DATASOURCE_USERNAME: auth_user
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      API_KEY_BREVO: ${API_KEY_BREVO}
      JWT_EXPIRATION: 3600000
      SPRING_MAIL_HOST: smtp.gmail.com
      SPRING_MAIL_PORT: 587
      SPRING_MAIL_USERNAME: sebas17rr@gmail.com
      SPRING_MAIL_PASSWORD: ${SPRING_MAIL_PASSWORD}
    depends_on:
      - db
    ports:
      - "80:80"
    networks:
      - microservices-network

  log-app:
    build:
      context: ./Microservice-Logs
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      MONGO_URI: "mongodb://mongo:27018/logServiceDB"
      RABBITMQ_URI: "amqp://rabbitmq:rabbitmq@rabbitmq:5672/"
    depends_on:
      - mongo-db
      - rabbitmq
    volumes:
      - ./Microservice-Logs:/usr/src/app # Mapeo del proyecto
      - /usr/src/app/node_modules # Asegura que node_modules no se sobrescriba
    command: npm run dev
    networks:
      - microservices-network

  mongo-db:
    image: mongo:5.0
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - microservices-network

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"  
      - "15672:15672" 
    environment:
      RABBITMQ_DEFAULT_USER: rabbitmq
      RABBITMQ_DEFAULT_PASS: rabbitmq
    networks:
      - microservices-network

networks:
  microservices-network:
    driver: bridge

volumes:
  db_data:
  mongo-data:
    driver: local
